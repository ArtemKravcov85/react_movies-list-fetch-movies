{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","normalizeMovieData","movieData","poster","Poster","Title","Plot","imdbID","FindMovie","addMovie","useState","setMovie","setQuery","error","setError","isLoading","setIsLoading","handleSubmit","useCallback","event","a","preventDefault","trim","newMovie","onSubmit","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","App","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80e9aeae.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { Movie } from './types/Movie';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=18ad378c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport function normalizeMovieData(movieData: MovieData): Movie {\n  const poster = movieData.Poster !== 'N/A'\n    ? movieData.Poster\n    : 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const movie = {\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: poster,\n    imdbId: movieData.imdbID,\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n  };\n\n  return movie;\n}\n","import React, { useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie, normalizeMovieData } from '../../api';\n\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError('');\n    setMovie(null);\n  };\n\n  const handleSubmit = useCallback(async (\n    event: React.FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n\n    if (!query.trim()) {\n      setError('Enter the movie title');\n      setMovie(null);\n\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const newMovie = await getMovie(query);\n\n      if ((newMovie as ResponseError).Response === 'False') {\n        setError((newMovie as ResponseError).Error);\n      }\n\n      setMovie(normalizeMovieData(newMovie as MovieData));\n    } catch {\n      setError('An error occurred while fetching the movie data');\n      setMovie(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': error,\n              })}\n              value={query}\n              onChange={handleTitleChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && !error && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && !error && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const isNewMovie = movies.some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!isNewMovie) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}